﻿@using TenkiAme.UtilityObjects
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model TenkiAme.Models.WeatherModel
@{
    ViewData["Title"] = "TenkiAme ";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<div class="flex flex-col gap-4 md:flex-row flex-grow wid-full">
    <div class="flex flex-row wid-full">
        <div class="flex wid-full min-w-18r flex-col gap-4 md-half-wid">
            <div class="rounded-border-xl border bg-card relative flex wid-full flex-col justify-between overflow-hidden">
                <div class="flex justify-between font-bold p-4 gap-1r font-medium">
                    <div class="flex justify-between">@DateTime.Now.DayOfWeek @Model.WeatherDays[0].GetFormattedCalendarDate()</div>
                    <div class="flex justify-between">Wellington</div>
                </div>
                <div class="flex justify-centre p-4 gap-1r">
                    <div class="flex font-xlarge font-bold font-weight-700">@Model.WeatherDays[0].GetCurrentTemperature()°C</div>
                </div>
                <div class="flex justify-between p-4 gap-1r">
                    <ul class="list-style-none font-bold font-medium padding-left-none">
                        <li>
                            <span>High: @Model.WeatherDays[0].GetMaxTemperature()°C</span>
                        </li>
                        <li>
                            <span>Low: @Model.WeatherDays[0].GetMinTemperature()°C</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="rounded-border-xl border bg-card relative flex wid-full flex-col justify-between overflow-hidden">
                <div>
                    <div class="flex justify-between align-vertical-centre p-4">
                        <span><strong>Current UV Level: </strong>@Model.UVs[0].GetCurrentUVLevel()</span>
                    </div>
                    <div class="flex justify-between align-vertical-centre p-4">
                        <span><strong>Max UV Level: </strong>@Math.Round(Model.UVs[0].GetMaxUVLevelAndTime().Value) at @Model.UVs[0].GetMaxUVLevelAndTime().GetNZTime().ToString("t")</span>
                    </div>
                    <div class="flex justify-between align-vertical-centre p-4">
                        <span class="pre-line">@Model.UVs[0].GetUVSafetyMessage()</span>
                    </div>
                </div> 
            </div>
        </div>
        <div class="margin-left grid grid-cols-2 gap-4">
            @for (int i = 0; i < 2; i++)
            {
                <div class="rounded-border-xl border bg-card relative flex wid-full flex-col justify-between overflow-hidden">
                    <div>
                        <div class="flex justify-between  p-4">
                            <span>@Model.WeatherDays[i].GetFormattedCalendarDate()</span>
                        </div>
                        <div class="flex justify-between  p-4">
                            <span>Low: @Model.WeatherDays[i].GetMinTemperature()</span>
                            <span>High: @Model.WeatherDays[i].GetMaxTemperature()</span>
                        </div>
                    </div>
                    <div class="flex justify-centre p-4 gap-1r">
                        <div class="flex font-med font-bold font-weight-700 justify-centre align-vertical-centre"><img src="@Model.WeatherDays[i].GetWeatherImage()" style="height: 100%; width:100%; " class=" " /></div>
                    </div>
                    <div class="flex justify-content-evenly">
                        <div class="flex justify-centre font-weight-525"><img src="/images/sunrise.png" />@WeatherUtil.RoundTwilightTime(Model.SunriseSunsets[i].sunrise)</div>
                        <div class="flex justify-centre font-weight-525"><img src="/images/sunset.png" /> @WeatherUtil.RoundTwilightTime(Model.SunriseSunsets[i].sunset)</div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div id="hourlyForecast" class="container block rounded-border-xl border margin-top overflow-auto">
    <div class="block">
        <div class="hstack no-wrap">
            @for (int i = 0; i < 2; i++)
            {
                int hourIndex = 0; //For creating an ID for each hour of the forecast

                foreach (var weatherHour in Model.WeatherDays[i].WeatherHours)
                {
                    hourIndex++;

                    string divId = "day" + i + "hour" + hourIndex;
                    string timeDivId = divId + "Time";
                    string rainDivId = divId + "Rain";
                    string tempDivId = divId + "Temp";

                    <div id="@divId" class="vstack border rounded-border-xl">
                        <div id="@timeDivId" class="justify-centre width-hour margin-top margin-left margin-right font-bold">
                            @weatherHour.Time.ToString("htt")
                        </div>
                        <div class="justify-centre margin-top margin-left margin-right">
                            <img src="/images/Raindrops-Transparent.png" class="justify-centre margin-left margin-right" style="height: 100%; width:100%;" />
                         </div>
                        <div id="@rainDivId" class="justify-centre margin-top margin-left margin-right">
                            @weatherHour.GetFormattedRainfall()
                        </div>
                        <div class="justify-centre margin-top margin-left margin-right">
                            <img src="/images/Orange-Thermometer-Transparent.png" class="justify-centre margin-left margin-right" style="height: 100%; width:100%;" />
                        </div>
                        <div id="@tempDivId" class="justify-centre margin-top margin-left margin-right" style="">
                            @weatherHour.GetFormattedTemperature()
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
<script src="~/js/IdentifyCurrentHour.js"></script>